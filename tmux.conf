# $Id: screen-keys.conf,v 1.6 2010/02/02 21:34:16 nicm Exp $
#
# By Nicholas Marriott. Public domain.
# Modified by Steven Allen.
#
# This configuration file binds many of the common GNU screen key bindings to
# appropriate tmux key bindings. Note that for some key bindings there is no
# tmux analogue and also that this set omits binding some commands available in
# tmux but not in screen.
#
# Note this is only a selection of key bindings and they are in addition to the
# normal tmux key bindings. This is intended as an example not as to be used
# as-is.

set -g default-terminal "screen-256color"

# Set the prefix to ^A.
unbind C-b
set -g prefix C-a
bind a send-prefix
# !!! THIS SHOULD BE THE DEFAULT !!!
set -s escape-time 0

# Bind appropriate commands similar to screen.
# lockscreen ^X x 
unbind ^X
bind ^X lock-server
unbind x
bind x lock-server

# screen ^C c 
unbind ^C
bind ^C new-window
bind c new-window

# detach ^D d
unbind ^D
bind ^D detach

# displays * 
unbind *
bind * list-clients

# next ^@ ^N sp n 
unbind ^@
bind ^@ next-window
bind -n C-n next-window
bind -n C-p previous-window
unbind " "
bind " " next-window
unbind n
bind n next-window

# title A
unbind A
bind A command-prompt "rename-window %%"

# other ^A
unbind ^A
bind ^A last-window

# prev ^H ^P p ^? 
unbind ^H
bind ^H previous-window
unbind ^P
bind ^P previous-window
unbind p
bind p previous-window
unbind BSpace
bind BSpace previous-window

# windows ^W w 
unbind ^W
bind ^W list-windows
unbind w
bind w list-windows

# quit \ 
unbind '\'
bind \ confirm-before "kill-server"

# kill K k 
unbind K
bind K confirm-before "kill-window"
unbind k
bind k confirm-before "kill-window"

# redisplay ^L l 
unbind ^L
bind ^L refresh-client
unbind l
bind l refresh-client

# split -h |
unbind %
unbind |
bind | split-window -h

# split -v _
bind _ split-window -v

# :kB: focus up
unbind Tab
bind Tab select-pane -D
unbind BTab
bind BTab select-pane -U

# " windowlist -b
unbind '"'
bind '"' choose-window

# Unlink
unbind 'q'
bind 'q' unlink-window

# Pane keys
#bind-key -n C-right select-pane -R
#bind-key -n C-left select-pane -L
#bind-key -n C-up select-pane -U
#bind-key -n C-down select-pane -D

# copy mode to escape key
unbind [
bind Escape copy-mode

set-window-option -g mode-keys vi
set-window-option -g mode-mouse on

# UI
set-option -g status-bg default
set-option -g status-fg white
set-window-option -g window-status-format '#[fg=black,bold]#W[#I]'
set-window-option -g window-status-current-format '#[fg=cyan,bold]#W[#I]#[default]'
set-option -g status-right '#[fg=white,bold]#H:#S#[default]'
set-option -g status-left '#[fg=black,bold]>>#[fg=cyan]>'
set-option -g pane-border-fg "white"
set-option -g pane-active-border-fg "cyan"
set-option -g mouse-select-pane on
set-option -g message-bg cyan
set-window-option -g remain-on-exit off

# Clock
set-window-option -g clock-mode-colour green
set-window-option -g clock-mode-style 24

# 256 Colors + UTF-8
set-window-option -g utf8 on
set -g set-titles off

# Custom Commands
bind l new-window -n Listen ncmpcpp
bind m new-window -n Mail mutt
bind i run-shell     'attach irssi'
bind h new-window -n Htop htop
bind u new-window -n Update 'pkg u'
bind t run-shell     'attach transmission-remote-cli'
bind v new-window -n Volume 'alsamixer'
bind z new-window -n Zephyr 'owl'
bind-key / command-prompt -p "Man:" "split-window -h 'exec man %%'"

# Prevent tmux from running the shell as a login shell
set -g default-command $SHELL

# Cut and Paste from X
bind C-p run "tmux set-buffer \"$(xclip -o)\"; tmux paste-buffer"
bind C-y run "tmux show-buffer | xclip"

# Save environment
set -g update-environment "WINDOWID SSH_ASKPASS SSH_AUTH_SOCK SSH_AGENT_PID SSH_CONNECTION GNOME_KEYRING_CONTROL GNOME_KEYRING_PID DBUS_SESSION_BUS_ADDRESS XDG_SESSION_COOKIE XDG_SESSION_PATH XDG_SESSION_PID XDG_SESSION_ID GPG_AGENT_INFO BROWSER"
set -g lock-command "systemctl --user start lock.target"

set -g base-index 1

new-session # Create session if none exists
